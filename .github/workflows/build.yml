name: Build and Upload

on:
  release:
    types:
      - prereleased
      - released
  push:
    branches:
      - 'main'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - 'main'

jobs:
  build:
    name: Build the project
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform: [linux/amd64]
        # platform: [linux/amd64, linux/arm64] Qemu is not able to build proper ebpf code :/

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: cribl/scope-ebpf
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Setup architecture
        id: build-arch
        run: |
          if [ "${{ matrix.platform }}" == "linux/amd64" ]; then
            echo "build_arch=x86_64" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.platform }}" == "linux/arm64" ]; then
            echo "build_arch=arm64" >> $GITHUB_OUTPUT
          fi

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # network=host driver-opt needed to push to local registry
          driver-opts: network=host

      - name: Setup Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ steps.build-arch.outputs.build_arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ steps.build-arch.outputs.build_arch }}-
            ${{ runner.os }}-docker-
            ${{ runner.os }}-

      - name: Build builder image
        uses: docker/build-push-action@v4
        with:
          file: ./docker/builder/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          tags: localhost:5000/cribl/scope-ebpf-builder:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Login to Docker Hub
        if: "! github.event.pull_request.head.repo.fork " 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_USERPASS }}

      - name: Build and push scope-ebpf image (next)
        uses: docker/build-push-action@v4
        with:
          file: ./docker/base/Dockerfile
          push: ${{ github.event_name == 'push' }}
          load: ${{ github.event_name != 'push' }}
          platforms: ${{ matrix.platform }}
          tags: cribl/scope-ebpf:next
          build-contexts: |
            cribl/scope-ebpf-builder=docker-image://localhost:5000/cribl/scope-ebpf-builder:latest

      - name: Build and push scope-ebpf image (tag)
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        uses: docker/build-push-action@v4
        with:
          file: ./docker/base/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-contexts: |
            cribl/scope-ebpf-builder=docker-image://localhost:5000/cribl/scope-ebpf-builder:latest

      - name: Swap build cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
